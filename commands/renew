#!/bin/bash

# Source Gokku helper functions
if [ -f "/opt/gokku/scripts/plugin-helpers.sh" ]; then
    source /opt/gokku/scripts/plugin-helpers.sh
fi

SERVICE_NAME="$1"

if [ -z "$SERVICE_NAME" ]; then
    echo "Usage: $0 <service-name>"
    echo "Example: $0 ssl-proxy"
    exit 1
fi

echo "-----> Renewing certificates for Let's Encrypt service: $SERVICE_NAME"

# Check if service exists
SERVICE_DIR="/opt/gokku/services/$SERVICE_NAME"
if [ ! -d "$SERVICE_DIR" ]; then
    echo "-----> Service '$SERVICE_NAME' not found"
    exit 1
fi

# Check if certificates exist
CERTS_DIR="$SERVICE_DIR/certs"
if [ ! -d "$CERTS_DIR" ] || [ -z "$(ls -A "$CERTS_DIR" 2>/dev/null)" ]; then
    echo "-----> No certificates found for service '$SERVICE_NAME'"
    echo "       Run 'gokku letsencrypt:create $SERVICE_NAME <domain>' to create certificates"
    exit 1
fi

# Renew certificates using certbot
echo "-----> Starting certificate renewal process..."

# Find and temporarily stop nginx containers that are using port 80
CONTAINERS_TO_RESTART=()
for container in $(docker ps --format "{{.Names}}"); do
    if docker port "$container" 2>/dev/null | grep -qE ":80/"; then
        echo "       Temporarily stopping container: $container"
        docker stop "$container" > /dev/null 2>&1
        CONTAINERS_TO_RESTART+=("$container")
    fi
done

docker run --rm \
    -v "$SERVICE_DIR/certs:/etc/letsencrypt/certs" \
    -v "$SERVICE_DIR/accounts:/etc/letsencrypt/accounts" \
    -v "$SERVICE_DIR/logs:/var/log/letsencrypt" \
    -p 80:80 \
    certbot/certbot renew \
    --preferred-challenges http \
    --config-dir "/etc/letsencrypt/accounts" \
    --cert-path "/etc/letsencrypt/certs" \
    --non-interactive \
    --quiet

RENEWAL_EXIT_CODE=$?

# Restart containers that were temporarily stopped
if [ ${#CONTAINERS_TO_RESTART[@]} -gt 0 ]; then
    echo "-----> Restarting temporarily stopped containers..."
    for container in "${CONTAINERS_TO_RESTART[@]}"; do
        echo "       Restarting: $container"
        docker start "$container" > /dev/null 2>&1
    done
fi

if [ $RENEWAL_EXIT_CODE -eq 0 ]; then
    echo "-----> Certificate renewal completed successfully"

    # Update certificate symlinks if nginx service is linked
    if [ -f "$SERVICE_DIR/nginx-service" ]; then
        NGINX_SERVICE=$(cat "$SERVICE_DIR/nginx-service")
        NGINX_DIR="/opt/gokku/services/$NGINX_SERVICE"
        NGINX_SSL_DIR="$NGINX_DIR/ssl"

        if [ -d "$NGINX_DIR" ] && [ -d "$NGINX_SSL_DIR" ]; then
            echo "-----> Updating certificate symlinks for nginx service: $NGINX_SERVICE"
            for domain_dir in "$CERTS_DIR"/*; do
                if [ -d "$domain_dir" ]; then
                    domain=$(basename "$domain_dir")
                    if [ -f "$domain_dir/fullchain.pem" ] && [ -f "$domain_dir/privkey.pem" ]; then
                        ln -sf "$domain_dir/fullchain.pem" "$NGINX_SSL_DIR/$domain.crt"
                        ln -sf "$domain_dir/privkey.pem" "$NGINX_SSL_DIR/$domain.key"
                        echo "       Updated symlinks for domain: $domain"
                    fi
                fi
            done
        fi
    fi

    # Show updated certificate information
    echo ""
    echo "-----> Updated certificate information:"
    for domain_dir in "$CERTS_DIR"/*; do
        if [ -d "$domain_dir" ]; then
            domain=$(basename "$domain_dir")
            if [ -f "$domain_dir/fullchain.pem" ]; then
                if command -v openssl >/dev/null 2>&1; then
                    expiry=$(openssl x509 -enddate -noout -in "$domain_dir/fullchain.pem" 2>/dev/null | cut -d= -f2)
                    if [ -n "$expiry" ]; then
                        echo "       $domain: Expires $expiry"
                    fi
                else
                    echo "       $domain: Certificate renewed"
                fi
            fi
        fi
    done

    echo ""
    echo "-----> Certificate renewal completed successfully"
    echo "       All certificates have been renewed"

else
    echo "-----> Certificate renewal failed"
    echo "       Check logs: $SERVICE_DIR/logs/"
    echo "       Manual renewal may be required"
    exit 1
fi
