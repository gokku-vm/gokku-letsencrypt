#!/bin/bash

# Source Gokku helper functions
if [ -f "/opt/gokku/scripts/plugin-helpers.sh" ]; then
    source /opt/gokku/scripts/plugin-helpers.sh
fi

NGINX_SERVICE="$1"

if [ -z "$NGINX_SERVICE" ]; then
    echo "Usage: $0 <nginx-service>"
    echo "Example: $0 nginx-lb"
    exit 1
fi

echo "-----> Linking Let's Encrypt plugin to nginx service '$NGINX_SERVICE'"

# Check if Let's Encrypt plugin is installed
PLUGIN_DIR="/opt/gokku/plugins/letsencrypt"
if [ ! -d "$PLUGIN_DIR" ]; then
    echo "-----> Let's Encrypt plugin not installed"
    echo "       Run 'gokku letsencrypt:install' first"
    exit 1
fi

# Check if nginx service exists
NGINX_DIR="/opt/gokku/services/$NGINX_SERVICE"
if [ ! -d "$NGINX_DIR" ]; then
    echo "-----> Nginx service '$NGINX_SERVICE' not found"
    exit 1
fi

# Add nginx service to list of linked services
if [ ! -f "$PLUGIN_DIR/nginx-services" ] || ! grep -q "^$NGINX_SERVICE$" "$PLUGIN_DIR/nginx-services"; then
    echo "$NGINX_SERVICE" >> "$PLUGIN_DIR/nginx-services"
    echo "-----> Added nginx service to linked services"
fi

# Create symlinks for certificates in nginx ssl directory
NGINX_SSL_DIR="$NGINX_DIR/ssl"
mkdir -p "$NGINX_SSL_DIR"

# Link certificates for each domain
if [ -d "$PLUGIN_DIR/certs" ]; then
    for domain_dir in "$PLUGIN_DIR/certs"/*; do
        if [ -d "$domain_dir" ]; then
            domain=$(basename "$domain_dir")
            echo "-----> Linking certificates for domain: $domain"

            # Create symlinks for nginx
            ln -sf "$domain_dir/fullchain.pem" "$NGINX_SSL_DIR/$domain.crt"
            ln -sf "$domain_dir/privkey.pem" "$NGINX_SSL_DIR/$domain.key"
        fi
    done

    # Create example nginx configuration file
    EXAMPLE_DIR="$NGINX_DIR/examples"
    mkdir -p "$EXAMPLE_DIR"
    cat > "$EXAMPLE_DIR/ssl-config.example" << 'EOF'
# Example SSL configuration for Let's Encrypt certificates
# This file is for reference only. The nginx plugin manages actual configurations.
#
# To use SSL in your nginx service, configure it through:
#   gokku nginx:add-domain <nginx-service> <app> <domain>
#
# The certificates are available at:
#   /etc/nginx/ssl/<domain>.crt
#   /etc/nginx/ssl/<domain>.key

server {
    listen 443 ssl http2;
    server_name example.com;

    ssl_certificate /etc/nginx/ssl/example.com.crt;
    ssl_certificate_key /etc/nginx/ssl/example.com.key;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Your location blocks here
    location / {
        # Configure your proxy or static file serving
    }
}

# HTTP redirect to HTTPS
server {
    listen 80;
    server_name example.com;
    return 301 https://$server_name$request_uri;
}
EOF
    echo "-----> Created example configuration: $EXAMPLE_DIR/ssl-config.example"
fi

echo "-----> Successfully linked Let's Encrypt plugin to nginx"
echo "       Nginx service: $NGINX_SERVICE"
echo "       SSL certificates: $NGINX_SSL_DIR/"
echo "       Example config: $NGINX_DIR/examples/ssl-config.example"
echo ""
echo "-----> Next steps:"
echo "       Configure your domain in nginx using:"
echo "       gokku nginx:add-domain $NGINX_SERVICE <app> <domain>"
